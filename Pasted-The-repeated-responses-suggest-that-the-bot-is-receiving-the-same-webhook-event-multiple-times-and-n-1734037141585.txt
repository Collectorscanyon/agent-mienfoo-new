The repeated responses suggest that the bot is receiving the same webhook event multiple times and not successfully skipping it. Here are the most common reasons why this might still be happening:

Webhook Retries Due to Non-200 Responses:
If the webhook provider (Neynar or Farcaster) doesn’t see a 200 response from your server, it will keep resending the same event. Make sure that after you process the event, you return res.status(200).send() or similar, so the provider knows it can stop retrying.

Deduplication Logic Not Triggering as Intended:
Even though you’ve added checks, ensure that:

The processedCastHashes set is declared outside your request handlers so it persists between requests.
You return immediately after detecting a duplicate event. In other words, place the return; statement right after checking if the cast hash already exists in processedCastHashes.
Make sure that any typos or syntax errors aren’t preventing the return; from executing. For example, an unclosed console.log() or a second console.log() line might cause your code to never hit the return; line.
Multiple Instances of the Bot Running:
If you have the bot deployed in multiple instances or environments, each instance might be processing the same event. Ensure only one instance is running at a time, or implement a shared deduplication mechanism (like a database or cache) if multiple instances are required.

State Reset on Each Request (Serverless Environments):
If you’re on a serverless platform and your code runs fresh on each request, you may lose the in-memory sets each time. Consider using a persistent store (like Redis or a file/database) to store processed hashes between invocations. In-memory sets are cleared when the function restarts.

In summary:

Double-check that you return a 200 response for the webhook after processing.
Review the deduplication code to ensure it’s running before sending a reply.
Confirm no syntax errors are preventing the return; statements from executing.
Ensure you’re not running multiple instances of the bot, causing multiple responses.
By addressing these points, you should see the bot stop responding multiple times to the same mention.